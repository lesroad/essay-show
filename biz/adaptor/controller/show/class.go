// Code generated by hertz generator.

package show

import (
	"context"
	"essay-show/biz/adaptor"
	"essay-show/biz/application/dto/essay/show"
	"essay-show/provider"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CreateClass .
// @router /class/create [POST]
func CreateClass(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.CreateClassReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.ClassService.CreateClass(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// ListClasses .
// @router /class/list [GET]
func ListClasses(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.ListClassesReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.ClassService.ListClasses(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// JoinClass .
// @router /class/join [POST]
func JoinClass(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.JoinClassReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.ClassService.JoinClass(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}

// GetClassMembers .
// @router /class/members [GET]
func GetClassMembers(ctx context.Context, c *app.RequestContext) {
	var err error
	var req show.GetClassMembersReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	p := provider.Get()
	resp, err := p.ClassService.GetClassMembers(ctx, &req)
	adaptor.PostProcess(ctx, c, &req, resp, err)
}
