// Code generated by hertz generator.

package main

import (
	"context"
	"essay-show/biz/adaptor"
	"essay-show/biz/infrastructure/util/log"
	"essay-show/provider"
	"net/http"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/app/middlewares/server/recovery"
	"github.com/cloudwego/hertz/pkg/app/server"
	"github.com/cloudwego/hertz/pkg/network/standard"
	prometheus "github.com/hertz-contrib/monitor-prometheus"
	"github.com/hertz-contrib/obs-opentelemetry/tracing"
	"github.com/zeromicro/go-zero/core/logx"
	"go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp"
	"go.opentelemetry.io/contrib/propagators/b3"
	"go.opentelemetry.io/otel"
	"go.opentelemetry.io/otel/propagation"
)

func Init() {
	provider.Init()
	logx.DisableStat()
	otel.SetTextMapPropagator(propagation.NewCompositeTextMapPropagator(b3.New(), propagation.Baggage{}, propagation.TraceContext{}))
	http.DefaultTransport = otelhttp.NewTransport(http.DefaultTransport) // 为每个出站HTTP请求创建子span
}

func main() {
	Init()
	c := provider.Get().Config

	// 启动作业批改定时器
	p := provider.Get()
	homeworkService := p.HomeworkService
	homeworkService.StartGrader(context.Background())

	// hertz接入optl: https://www.volcengine.com/docs/6431/1439035
	tracer, cfg := tracing.NewServerTracer()
	h := server.New(
		server.WithHostPorts(c.ListenOn),
		server.WithTransport(standard.NewTransporter),
		server.WithTracer(prometheus.NewServerTracer(":9091", "/server/metrics")),
		tracer,
	)

	// h.Use(hertztracing.ServerMiddleware(cfg)) 入站的HTTP span, span的名称通常是 HTTP GET /path 或 HTTP POST /path 格式
	h.Use(tracing.ServerMiddleware(cfg), recovery.Recovery(), func(ctx context.Context, c *app.RequestContext) {
		ctx = adaptor.InjectContext(ctx, c)
		c.Next(ctx)
	})

	register(h)
	log.Info("server start")
	h.Spin()
}
